---
apiVersion: v1
kind: Namespace
metadata:
  name: teamcity-system
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: teamcity-server-storage-class
  namespace: teamcity-system
provisioner: kubernetes.io/portworx-volume
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: teamcity-server-persistent-volume-claim
  namespace: teamcity-system
  annotations:
    volume.beta.kubernetes.io/storage-class: teamcity-server-storage-class
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teamcity-server-deployment
  namespace: teamcity-system
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: teamcity-server
  template:
    metadata:
      labels:
        app: teamcity-server
    spec:
      containers:
        - name: teamcity-server
          image: jetbrains/teamcity-server:2020.1
          volumeMounts:
            - mountPath: "/data/teamcity_server/datadir"
              name: teamcity-server-volume
      volumes:
        - name: teamcity-server-volume
          persistentVolumeClaim:
            claimName: teamcity-server-persistent-volume-claim
---
apiVersion: v1
kind: Service
metadata:
  name: teamcity-server-service
  namespace: teamcity-system
  labels:
    app: teamcity-server-service
spec:
  selector:
    app: teamcity-server
  ports:
    - port: 8111
      targetPort: 8111
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: teamcity-agent-deployment
  namespace: teamcity-system
spec:
  selector:
    matchLabels:
      app: teamcity-agent
  template:
    metadata:
      labels:
        app: teamcity-agent
    spec:
      containers:
        - name: teamcity-agent
          image: jetbrains/teamcity-agent:2020.1
          env:
            - name: SERVER_URL
              value: teamcity-server-service:8111
          volumeMounts:
            - name: docker-sock
              mountPath: "/var/run/docker.sock"
      volumes:
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: teamcity-certificate
  namespace: teamcity-system
spec:
  secretName: teamcity-secret
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  dnsNames:
    - teamcity.phuongn.dev
    - '*.teamcity.phuongn.dev'
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: teamcity-ingress
  namespace: teamcity-system
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
spec:
  tls:
    - hosts:
        - teamcity.phuongn.dev
        - '*.teamcity.phuongn.dev'
      secretName: teamcity-secret
  rules:
    - host: teamcity.phuongn.dev
      http:
        paths:
          - backend:
              serviceName: teamcity-server-service
              servicePort: 8111
---