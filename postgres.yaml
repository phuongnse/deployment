apiVersion: v1
kind: Namespace
metadata:
  name: postgres-system
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: postgres-storage-class
  namespace: postgres-system
provisioner: kubernetes.io/portworx-volume
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-persistent-volume-claim
  namespace: postgres-system
  annotations:
    volume.beta.kubernetes.io/storage-class: postgres-storage-class
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: postgres-system
spec:
  selector:
    matchLabels:
      app: postgres
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: postgres
    spec:
      schedulerName: stork
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: px/enabled
                operator: NotIn
                values:
                - "false"
      containers:
      - name: postgres
        image: postgres:12.3
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-password
              key: password
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        volumeMounts:
        - mountPath: "/var/lib/postgresql/data"
          name: postgres-persistent-volume
      volumes:
      - name: postgres-persistent-volume
        persistentVolumeClaim:
          claimName: postgres-persistent-volume-claim
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: postgres-system
  labels:
    app: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
