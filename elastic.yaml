kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: elasticsearch-storage-class
  namespace: elastic-system
provisioner: kubernetes.io/portworx-volume
---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elasticsearch
  namespace: elastic-system
spec:
  version: 7.7.0
  nodeSets:
  - name: default
    count: 1
    config:
      node.master: true
      node.data: true
      node.ingest: true
      node.store.allow_mmap: false
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
        annotations:
          volume.beta.kubernetes.io/storage-class: elasticsearch-storage-class
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: kibana
  namespace: elastic-system
spec:
  version: 7.7.0
  count: 1
  elasticsearchRef:
    name: elasticsearch
  http:
    tls:
      selfSignedCertificate:
        disabled: true 
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: kibana-certificate
  namespace: elastic-system
spec:
  secretName: kibana-certificate-secret
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  dnsNames:
    - kibana.phuongn.dev
    - '*.kibana.phuongn.dev'
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: kibana-ingress
  namespace: elastic-system
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
spec:
  tls:
    - hosts:
        - kibana.phuongn.dev
        - '*.kibana.phuongn.dev'
      secretName: kibana-certificate-secret
  rules:
    - host: kibana.phuongn.dev
      http:
        paths:
          - backend:
              serviceName: kibana-kb-http
              servicePort: 5601